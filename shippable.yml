language: ruby

#rvm:
#  - 2.5
#  - 2.6
  
#services:
#  - postgres   
matrix:
  include:
    - rvm: 2.4 
      nodePool: dynamic_u16_xlarge
      env: PGVERSION=10.0-1-linux-64
    - rvm: 2.4 
      nodePool: shippable_shared_aarch32
      env: PGVERSION=10.0-1-linux
    - rvm: 2.5 
      nodePool: shippable_shared_aarch64
      env: PGVERSION=10.0-1-linux-64
      
build:
#  cache: true
#  cache_dir_list:  
#  - $SHIPPABLE_BUILD_DIR/shippable.yml
#  pre_ci_boot:
#    image_name: ric03uec/u16ruball
#    image_tag: v6.2.4.patch-2
  ci:
    - env
    - |
     echo "PGVERSION: ${PGVERSION}"
    - echo "DONE"
#    - . /etc/profile.d/rvm.sh
#    - cd . && trap
#    - trap
#    - rvm version
#    - echo "hello world"
    #- env
#    - mkdir -p $SHIPPABLE_BUILD_DIR/shippable/testresults
#   - mkdir -p $SHIPPABLE_BUILD_DIR/shippable/codecoverage
#  - pwd
#    - rvm use $SHIPPABLE_RUBY
#    - cp -vr $SHIPPABLE_BUILD_DIR/coverage_report.xml $SHIPPABLE_BUILD_DIR/shippable/codecoverage/
#    - cp -vr $SHIPPABLE_BUILD_DIR/test_report.xml $SHIPPABLE_BUILD_DIR/shippable/testresults/
#    - echo "test file content" >> testfile.txt
#    - mv testfile.txt $SHIPPABLE_BUILD_DIR/
#    - cd $SHIPPABLE_BUILD_DIR
    
#  post_ci:
#    - >
#      if [ $BRANCH = "master" ] && [ $IS_PULL_REQUEST == "false" ]; then
#        ENV=staging;
#        IMAGE_NAME=$IMAGE_NAME_STAGING;
#      fi;
#      if [ $BRANCH = "production" ] && [ $IS_PULL_REQUEST == "false" ]; then
#        ENV=staging;
#        IMAGE_NAME=$IMAGE_NAME_PRODUCTION;
#      fi;
#      if [ $ENV ]; then
#        echo $ENV;
#        echo $GCR_REPO
#        echo $IMAGE_NAME
#        echo $BUILD_NUMBER
#        docker build -t $GCR_REPO/$IMAGE_NAME:$BUILD_NUMBER .;
#        #docker push $GCR_REPO/$IMAGE_NAME:$BUILD_NUMBER;
#      fi;
      
#integrations:
#  hub:
#    - integrationName: reg_dh_ric03uec 
#      type: dockerRegistryLogin
      
#    - integrationName: gcr-admin 
#      type: gcloudkey
